<?xml version="1.0" encoding="utf-8"?>
<hibernate-mapping xmlns="urn:nhibernate-mapping-2.2">

  <class name ="beans.Village, beans" table="villages_common" lazy="true">
    <cache usage="read-write"/>
    <id name="ID" column="id" type="Int32">
      <generator class="identity"/>
    </id>
    
    <property name="Name" column="name" length="100" type="String"/>
    <property name="X" column="x" type="Int32" />
    <property name="Y" column="y" type="Int32" />
    <many-to-one name="Player" class="beans.Player, beans" column="userid" not-null="false" lazy="no-proxy" fetch="select"  />
    <property name="Points" column="points" type="double" />
    <property name="Loyal" column="loyal" type="double" />
    <property name="LastUpdate" column="last_update" type="timestamp" not-null="true" />
    <property name="Population" column="population" type="double" />

    <bag name="Builds" table="build" cascade="all" fetch="select" inverse="true" lazy="true" >
      <cache usage="read-write"/>
      <key column="village_id" />
      <one-to-many class="beans.Build, beans"/>
    </bag>
    <bag name="Recruits" table="recruit" cascade="all" fetch="select" inverse="true" lazy="true"   >
      
      <cache usage="read-write"/>
      <key column="village_id" />
      <one-to-many class="beans.Recruit, beans"/>
    </bag>
    <bag name="Researches" table="researches" cascade="all" fetch="select" inverse="true" lazy="true" >
      <cache usage="read-write"/>
      <key column="village_id" />
      <one-to-many class="beans.Research, beans"/>
    </bag>
    <bag name="MovingCommandsFromMe" table="movement" cascade="all" fetch="select" inverse="false" lazy="true"  >
      <cache usage="read-write"/>
      <key column="from_village" />
      <one-to-many class="beans.MovingCommand, beans"/>
    </bag>
    <bag name="MovingCommandsToMe" table="movement" cascade="all" fetch="select" inverse="true" lazy="true" >
      <cache usage="read-write"/>
      <key column="to_village" />
      <one-to-many class="beans.MovingCommand, beans"/>
    </bag>
    <bag name="Offers" table="offers" cascade="all" fetch="select" inverse="true" lazy="true" >

      <cache usage="read-write"/>
      <key column="village_id" />
      <one-to-many class="beans.Offer, beans"/>
      
    </bag>
    <bag name="StationsAtMe" table="stationed" cascade="all" fetch="select" inverse="true" lazy="true" >
      <cache usage="read-write"/>
      <key column="at_village" />
      <one-to-many class="beans.Station, beans"/>
    </bag>
    <bag name="StationsFromMe" table="stationed" cascade="all" fetch="select" inverse="true" lazy="true" >
      <cache usage="read-write"/>
      <key column="from_village" />
      <one-to-many class="beans.Station, beans"/>
    </bag>
    
    <one-to-one name="VillageBuildingData" class="beans.VillageBuildingData, beans" cascade="all" lazy="no-proxy" fetch="select" />
    <one-to-one name="VillageResourceData" class="beans.VillageResourcesData, beans" cascade="all" lazy="no-proxy" fetch="select" />
    <one-to-one name="VillageTroopData" class="beans.VillageTroopData, beans" cascade="all" lazy="no-proxy" fetch="select" />
    <one-to-one name="VillageResearchData" class="beans.VillageResearchData, beans" cascade="all" lazy="no-proxy" fetch="select" />
  </class>

  <class name ="beans.VillageBuildingData, beans" table="villages_building" lazy="true">
    <cache usage="read-write"/>
    <id name="ID" column="id">
      <generator class="foreign">
        <param name="property">Village</param>
      </generator>
    </id>
    <property name="Headquarter" column="headquarter" type="Int32" />
    <property name="Barracks" column="barracks" type="Int32" />
    <property name="Stable" column="stable" type="Int32" />
    <property name="Workshop" column="workshop" type="Int32" />
    <property name="Academy" column="academy" type="Int32" />
    <property name="Smithy" column="smithy" type="Int32" />
    <property name="Rally" column="rally" type="Int32" />
    <property name="Market" column="market" type="Int32" />
    <property name="ClayPit" column="claypit" type="Int32" />
    <property name="IronMine" column="ironmine" type="Int32" />
    <property name="TimberCamp" column="timbercamp" type="Int32" />
    <property name="Warehouse" column="storage" type="Int32" />
    <property name="Farm" column="farm" type="Int32" />
    <property name="HidingPlace" column="hide" type="Int32" />
    <property name="Wall" column="wall" type="Int32" />
    <property name="Merchant" column="merchant" type="Int32" />

    <one-to-one name="Village" class="beans.Village, beans" constrained="true" foreign-key="id" />
  </class>

  <class name ="beans.VillageResourcesData, beans" table="villages_resources" lazy="true">
    <cache usage="read-write"/>
    <id name="ID" column="id" type="Int32">
      <generator class="foreign">
        <param name="property">Village</param>
      </generator>
    </id>
    <property name="Clay" column="clay" type="Int32" />
    <property name="Wood" column="wood" type="Int32" />
    <property name="Iron" column="iron" type="Int32" />

    <one-to-one name="Village" class="beans.Village, beans" foreign-key="id" constrained="true"/>
    
  </class>

  <class name ="beans.VillageTroopData, beans" table="villages_troop" lazy="true">
    <cache usage="read-write"/>
    <id name="ID" column="id" type="Int32">
      <generator class="foreign">
        <param name="property">Village</param>
      </generator>
    </id>
    <property name="Spear" column="spear" type="Int32" />
    <property name="Sword" column="sword" type="Int32" />
    <property name="Axe" column="axe" type="Int32" />
    <property name="Scout" column="scout" type="Int32" />
    <property name="LightCavalry" column="light" type="Int32" />
    <property name="HeavyCavalry" column="heavy" type="Int32" />
    <property name="Catapult" column="catapult" type="Int32" />
    <property name="Ram" column="ram" type="Int32" />
    <property name="Noble" column="noble" type="Int32" />
    
    <property name="SpearInVillage" column="in_spear" type="Int32" />
    <property name="SwordInVillage" column="in_sword" type="Int32" />
    <property name="AxeInVillage" column="in_axe" type="Int32" />
    <property name="ScoutInVillage" column="in_scout" type="Int32" />
    <property name="LightCavalryInVillage" column="in_light" type="Int32" />
    <property name="HeavyCavalryInVillage" column="in_heavy" type="Int32" />
    <property name="CatapultInVillage" column="in_catapult" type="Int32" />
    <property name="RamInVillage" column="in_ram" type="Int32" />
    <property name="NobleInVillage" column="in_noble" type="Int32" />

    <property name="SpearOfVillage" column="total_spear" type="Int32" />
    <property name="SwordOfVillage" column="total_sword" type="Int32" />
    <property name="AxeOfVillage" column="total_axe" type="Int32" />
    <property name="ScoutOfVillage" column="total_scout" type="Int32" />
    <property name="LightCavalryOfVillage" column="total_light" type="Int32" />
    <property name="HeavyCavalryOfVillage" column="total_heavy" type="Int32" />
    <property name="CatapultOfVillage" column="total_catapult" type="Int32" />
    <property name="RamOfVillage" column="total_ram" type="Int32" />
    <property name="NobleOfVillage" column="total_noble" type="Int32" />

    <one-to-one name="Village" class="beans.Village, beans" constrained="true" />
  </class>

  <class name ="beans.VillageResearchData, beans" table="villages_research" lazy="true">
    <cache usage="read-write"/>
    <id name="ID" column="id" type="Int32">
      <generator class="foreign">
        <param name="property">Village</param>
      </generator>
    </id>
    <property name="Attack" column="attack" type="Int32" />
    <property name="Defense" column="defense" type="Int32" />
    <property name="TroopSpeed" column="unit_speed" type="Int32" />

    <one-to-one name="Village" class="beans.Village, beans" foreign-key="id" constrained="true"/>

  </class>


</hibernate-mapping>